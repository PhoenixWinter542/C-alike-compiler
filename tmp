start -> function mulfunc
multfunc -> function multfunc
function -> type VARIABLE L_PAREN declare R_PAREN code
type -> INTEGER
declare -> type VARIABLE multdec
varcnst -> VARIABLE
varcnst -> DIGIT
varcnst -> VARIABLE array
varcnst -> call
call -> VARIABLE L_PAREN add multarg R_PAREN
array -> L_BRACK add R_BRACK
add -> add ADD sub
add -> sub
sub -> sub SUBTRACT mult
sub -> mult
mult -> mult MULTIPLY div
mult -> div
div -> div DIVIDE paren
div -> paren
paren -> L_PAREN add R_PAREN
paren -> varcnst
multarg -> 
multarg -> SEPARATOR add multarg
multdec -> SEPARATOR type VARIABLE multdec
code -> L_BRACE middle R_BRACE
middle -> assign END middle
middle -> init END middle
middle -> loop middle
middle -> case middle
middle -> read END middle
middle -> write END middle
middle -> arraydec END middle
middle -> RETURN add END middle
assign -> VARIABLE EQUAL add
assign -> VARIABLE array EQUAL add
init -> type VARIABLE initassign
initassign -> 
initassign -> EQUAL add
loop -> WHILE compare code
compare -> L_PAREN add relate R_PAREN
relate -> LESS
relate -> GREATER
relate -> LTE
relate -> GTE
relate -> COMPEQUAL
relate -> NOT EQUAL
case -> IF compare code elcase
elscase -> 
elcase -> ELSE code
read -> READ varcnst
write -> WRITE varcnst
arraydec -> type array variable
