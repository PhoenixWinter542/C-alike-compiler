Grammar

    0 $accept: input $end

    1 input: %empty
    2      | add

    3 add: add PLUS sub
    4    | sub

    5 sub: sub MINUS mult
    6    | mult

    7 mult: mult MULT div
    8     | div

    9 div: div DIV term
   10    | paren

   11 paren: L_PAREN add R_PAREN
   12      | term

   13 term: NUMBER


Terminals, with rules where they appear

$end (0) 0
error (256)
NUMBER (258) 13
PLUS (259) 3
MULT (260) 7
MINUS (261) 5
DIV (262) 9
L_PAREN (263) 11
R_PAREN (264) 11


Nonterminals, with rules where they appear

$accept (10)
    on left: 0
input (11)
    on left: 1 2, on right: 0
add (12)
    on left: 3 4, on right: 2 3 11
sub (13)
    on left: 5 6, on right: 3 4 5
mult (14)
    on left: 7 8, on right: 5 6 7
div (15)
    on left: 9 10, on right: 7 8 9
paren (16)
    on left: 11 12, on right: 10
term (17)
    on left: 13, on right: 9 12


State 0

    0 $accept: . input $end

    NUMBER   shift, and go to state 1
    L_PAREN  shift, and go to state 2

    $default  reduce using rule 1 (input)

    input  go to state 3
    add    go to state 4
    sub    go to state 5
    mult   go to state 6
    div    go to state 7
    paren  go to state 8
    term   go to state 9


State 1

   13 term: NUMBER .

    $default  reduce using rule 13 (term)


State 2

   11 paren: L_PAREN . add R_PAREN

    NUMBER   shift, and go to state 1
    L_PAREN  shift, and go to state 2

    add    go to state 10
    sub    go to state 5
    mult   go to state 6
    div    go to state 7
    paren  go to state 8
    term   go to state 9


State 3

    0 $accept: input . $end

    $end  shift, and go to state 11


State 4

    2 input: add .
    3 add: add . PLUS sub

    PLUS  shift, and go to state 12

    $default  reduce using rule 2 (input)


State 5

    4 add: sub .
    5 sub: sub . MINUS mult

    MINUS  shift, and go to state 13

    $default  reduce using rule 4 (add)


State 6

    6 sub: mult .
    7 mult: mult . MULT div

    MULT  shift, and go to state 14

    $default  reduce using rule 6 (sub)


State 7

    8 mult: div .
    9 div: div . DIV term

    DIV  shift, and go to state 15

    $default  reduce using rule 8 (mult)


State 8

   10 div: paren .

    $default  reduce using rule 10 (div)


State 9

   12 paren: term .

    $default  reduce using rule 12 (paren)


State 10

    3 add: add . PLUS sub
   11 paren: L_PAREN add . R_PAREN

    PLUS     shift, and go to state 12
    R_PAREN  shift, and go to state 16


State 11

    0 $accept: input $end .

    $default  accept


State 12

    3 add: add PLUS . sub

    NUMBER   shift, and go to state 1
    L_PAREN  shift, and go to state 2

    sub    go to state 17
    mult   go to state 6
    div    go to state 7
    paren  go to state 8
    term   go to state 9


State 13

    5 sub: sub MINUS . mult

    NUMBER   shift, and go to state 1
    L_PAREN  shift, and go to state 2

    mult   go to state 18
    div    go to state 7
    paren  go to state 8
    term   go to state 9


State 14

    7 mult: mult MULT . div

    NUMBER   shift, and go to state 1
    L_PAREN  shift, and go to state 2

    div    go to state 19
    paren  go to state 8
    term   go to state 9


State 15

    9 div: div DIV . term

    NUMBER  shift, and go to state 1

    term  go to state 20


State 16

   11 paren: L_PAREN add R_PAREN .

    $default  reduce using rule 11 (paren)


State 17

    3 add: add PLUS sub .
    5 sub: sub . MINUS mult

    MINUS  shift, and go to state 13

    $default  reduce using rule 3 (add)


State 18

    5 sub: sub MINUS mult .
    7 mult: mult . MULT div

    MULT  shift, and go to state 14

    $default  reduce using rule 5 (sub)


State 19

    7 mult: mult MULT div .
    9 div: div . DIV term

    DIV  shift, and go to state 15

    $default  reduce using rule 7 (mult)


State 20

    9 div: div DIV term .

    $default  reduce using rule 9 (div)
