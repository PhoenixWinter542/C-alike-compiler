State 21 conflicts: 5 reduce/reduce
State 23 conflicts: 2 reduce/reduce
State 24 conflicts: 3 reduce/reduce
State 25 conflicts: 4 reduce/reduce


Grammar

    0 $accept: input $end

    1 input: %empty
    2      | add EQUAL
    3      | MINUS add EQUAL
    4      | add

    5 add: add PLUS sub
    6    | sub
    7    | add PLUS

    8 sub: sub MINUS mult
    9    | mult
   10    | sub MINUS

   11 mult: mult MULT div
   12     | div
   13     | mult MULT

   14 div: div DIV term
   15    | paren
   16    | div DIV

   17 paren: L_PAREN add R_PAREN
   18      | term
   19      | add R_PAREN

   20 term: NUMBER


Terminals, with rules where they appear

$end (0) 0
error (256)
NUMBER (258) 20
PLUS (259) 5 7
MULT (260) 11 13
MINUS (261) 3 8 10
DIV (262) 14 16
L_PAREN (263) 17
R_PAREN (264) 17 19
EQUAL (265) 2 3


Nonterminals, with rules where they appear

$accept (11)
    on left: 0
input (12)
    on left: 1 2 3 4, on right: 0
add (13)
    on left: 5 6 7, on right: 2 3 4 5 7 17 19
sub (14)
    on left: 8 9 10, on right: 5 6 8 10
mult (15)
    on left: 11 12 13, on right: 8 9 11 13
div (16)
    on left: 14 15 16, on right: 11 12 14 16
paren (17)
    on left: 17 18 19, on right: 15
term (18)
    on left: 20, on right: 14 18


State 0

    0 $accept: . input $end

    NUMBER   shift, and go to state 1
    MINUS    shift, and go to state 2
    L_PAREN  shift, and go to state 3

    $default  reduce using rule 1 (input)

    input  go to state 4
    add    go to state 5
    sub    go to state 6
    mult   go to state 7
    div    go to state 8
    paren  go to state 9
    term   go to state 10


State 1

   20 term: NUMBER .

    $default  reduce using rule 20 (term)


State 2

    3 input: MINUS . add EQUAL

    NUMBER   shift, and go to state 1
    L_PAREN  shift, and go to state 3

    add    go to state 11
    sub    go to state 6
    mult   go to state 7
    div    go to state 8
    paren  go to state 9
    term   go to state 10


State 3

   17 paren: L_PAREN . add R_PAREN

    NUMBER   shift, and go to state 1
    L_PAREN  shift, and go to state 3

    add    go to state 12
    sub    go to state 6
    mult   go to state 7
    div    go to state 8
    paren  go to state 9
    term   go to state 10


State 4

    0 $accept: input . $end

    $end  shift, and go to state 13


State 5

    2 input: add . EQUAL
    4      | add .
    5 add: add . PLUS sub
    7    | add . PLUS
   19 paren: add . R_PAREN

    PLUS     shift, and go to state 14
    R_PAREN  shift, and go to state 15
    EQUAL    shift, and go to state 16

    $default  reduce using rule 4 (input)


State 6

    6 add: sub .
    8 sub: sub . MINUS mult
   10    | sub . MINUS

    MINUS  shift, and go to state 17

    $default  reduce using rule 6 (add)


State 7

    9 sub: mult .
   11 mult: mult . MULT div
   13     | mult . MULT

    MULT  shift, and go to state 18

    $default  reduce using rule 9 (sub)


State 8

   12 mult: div .
   14 div: div . DIV term
   16    | div . DIV

    DIV  shift, and go to state 19

    $default  reduce using rule 12 (mult)


State 9

   15 div: paren .

    $default  reduce using rule 15 (div)


State 10

   18 paren: term .

    $default  reduce using rule 18 (paren)


State 11

    3 input: MINUS add . EQUAL
    5 add: add . PLUS sub
    7    | add . PLUS
   19 paren: add . R_PAREN

    PLUS     shift, and go to state 14
    R_PAREN  shift, and go to state 15
    EQUAL    shift, and go to state 20


State 12

    5 add: add . PLUS sub
    7    | add . PLUS
   17 paren: L_PAREN add . R_PAREN
   19      | add . R_PAREN

    PLUS     shift, and go to state 14
    R_PAREN  shift, and go to state 21


State 13

    0 $accept: input $end .

    $default  accept


State 14

    5 add: add PLUS . sub
    7    | add PLUS .

    NUMBER   shift, and go to state 1
    L_PAREN  shift, and go to state 3

    $default  reduce using rule 7 (add)

    add    go to state 22
    sub    go to state 23
    mult   go to state 7
    div    go to state 8
    paren  go to state 9
    term   go to state 10


State 15

   19 paren: add R_PAREN .

    $default  reduce using rule 19 (paren)


State 16

    2 input: add EQUAL .

    $default  reduce using rule 2 (input)


State 17

    8 sub: sub MINUS . mult
   10    | sub MINUS .

    NUMBER   shift, and go to state 1
    L_PAREN  shift, and go to state 3

    $default  reduce using rule 10 (sub)

    add    go to state 22
    sub    go to state 6
    mult   go to state 24
    div    go to state 8
    paren  go to state 9
    term   go to state 10


State 18

   11 mult: mult MULT . div
   13     | mult MULT .

    NUMBER   shift, and go to state 1
    L_PAREN  shift, and go to state 3

    $default  reduce using rule 13 (mult)

    add    go to state 22
    sub    go to state 6
    mult   go to state 7
    div    go to state 25
    paren  go to state 9
    term   go to state 10


State 19

   14 div: div DIV . term
   16    | div DIV .

    NUMBER  shift, and go to state 1

    $default  reduce using rule 16 (div)

    term  go to state 26


State 20

    3 input: MINUS add EQUAL .

    $default  reduce using rule 3 (input)


State 21

   17 paren: L_PAREN add R_PAREN .
   19      | add R_PAREN .

    PLUS      reduce using rule 17 (paren)
    PLUS      [reduce using rule 19 (paren)]
    MULT      reduce using rule 17 (paren)
    MULT      [reduce using rule 19 (paren)]
    MINUS     reduce using rule 17 (paren)
    MINUS     [reduce using rule 19 (paren)]
    DIV       reduce using rule 17 (paren)
    DIV       [reduce using rule 19 (paren)]
    R_PAREN   reduce using rule 17 (paren)
    R_PAREN   [reduce using rule 19 (paren)]
    $default  reduce using rule 17 (paren)


State 22

    5 add: add . PLUS sub
    7    | add . PLUS
   19 paren: add . R_PAREN

    PLUS     shift, and go to state 14
    R_PAREN  shift, and go to state 15


State 23

    5 add: add PLUS sub .
    6    | sub .
    8 sub: sub . MINUS mult
   10    | sub . MINUS

    MINUS  shift, and go to state 17

    PLUS      reduce using rule 5 (add)
    PLUS      [reduce using rule 6 (add)]
    R_PAREN   reduce using rule 5 (add)
    R_PAREN   [reduce using rule 6 (add)]
    $default  reduce using rule 5 (add)


State 24

    8 sub: sub MINUS mult .
    9    | mult .
   11 mult: mult . MULT div
   13     | mult . MULT

    MULT  shift, and go to state 18

    PLUS      reduce using rule 8 (sub)
    PLUS      [reduce using rule 9 (sub)]
    MINUS     reduce using rule 8 (sub)
    MINUS     [reduce using rule 9 (sub)]
    R_PAREN   reduce using rule 8 (sub)
    R_PAREN   [reduce using rule 9 (sub)]
    $default  reduce using rule 8 (sub)


State 25

   11 mult: mult MULT div .
   12     | div .
   14 div: div . DIV term
   16    | div . DIV

    DIV  shift, and go to state 19

    PLUS      reduce using rule 11 (mult)
    PLUS      [reduce using rule 12 (mult)]
    MULT      reduce using rule 11 (mult)
    MULT      [reduce using rule 12 (mult)]
    MINUS     reduce using rule 11 (mult)
    MINUS     [reduce using rule 12 (mult)]
    R_PAREN   reduce using rule 11 (mult)
    R_PAREN   [reduce using rule 12 (mult)]
    $default  reduce using rule 11 (mult)


State 26

   14 div: div DIV term .

    $default  reduce using rule 14 (div)
